// generated by cdk8s
import { ApiObject } from 'cdk8s';
/**
 * Metric represents a resource to configure the metric collector with.
 *
 * @schema Metric
 */
export class Metric extends ApiObject {
    /**
     * Returns the apiVersion and kind for "Metric"
     */
    static GVK = {
        apiVersion: 'autoscaling.internal.knative.dev/v1alpha1',
        kind: 'Metric',
    };
    /**
     * Renders a Kubernetes manifest for "Metric".
     *
     * This can be used to inline resource manifests inside other objects (e.g. as templates).
     *
     * @param props initialization props
     */
    static manifest(props = {}) {
        return {
            ...Metric.GVK,
            ...toJson_MetricProps(props),
        };
    }
    /**
     * Defines a "Metric" API object
     * @param scope the scope in which to define this object
     * @param id a scope-local name for the object
     * @param props initialization props
     */
    constructor(scope, id, props = {}) {
        super(scope, id, {
            ...Metric.GVK,
            ...props,
        });
    }
    /**
     * Renders the object to Kubernetes JSON.
     */
    toJson() {
        const resolved = super.toJson();
        return {
            ...Metric.GVK,
            ...toJson_MetricProps(resolved),
        };
    }
}
/**
 * Converts an object of type 'MetricProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_MetricProps(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'metadata': obj.metadata,
        'spec': toJson_MetricSpec(obj.spec),
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/**
 * Converts an object of type 'MetricSpec' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_MetricSpec(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'panicWindow': obj.panicWindow,
        'scrapeTarget': obj.scrapeTarget,
        'stableWindow': obj.stableWindow,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
/**
 * PodAutoscaler is a Knative abstraction that encapsulates the interface by which Knative
components instantiate autoscalers.  This definition is an abstraction that may be backed
by multiple definitions.  For more information, see the Knative Pluggability presentation:
https://docs.google.com/presentation/d/19vW9HFZ6Puxt31biNZF3uLRejDmu82rxJIk1cWmxF7w/edit
 *
 * @schema PodAutoscaler
 */
export class PodAutoscaler extends ApiObject {
    /**
     * Returns the apiVersion and kind for "PodAutoscaler"
     */
    static GVK = {
        apiVersion: 'autoscaling.internal.knative.dev/v1alpha1',
        kind: 'PodAutoscaler',
    };
    /**
     * Renders a Kubernetes manifest for "PodAutoscaler".
     *
     * This can be used to inline resource manifests inside other objects (e.g. as templates).
     *
     * @param props initialization props
     */
    static manifest(props = {}) {
        return {
            ...PodAutoscaler.GVK,
            ...toJson_PodAutoscalerProps(props),
        };
    }
    /**
     * Defines a "PodAutoscaler" API object
     * @param scope the scope in which to define this object
     * @param id a scope-local name for the object
     * @param props initialization props
     */
    constructor(scope, id, props = {}) {
        super(scope, id, {
            ...PodAutoscaler.GVK,
            ...props,
        });
    }
    /**
     * Renders the object to Kubernetes JSON.
     */
    toJson() {
        const resolved = super.toJson();
        return {
            ...PodAutoscaler.GVK,
            ...toJson_PodAutoscalerProps(resolved),
        };
    }
}
/**
 * Converts an object of type 'PodAutoscalerProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_PodAutoscalerProps(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'metadata': obj.metadata,
        'spec': toJson_PodAutoscalerSpec(obj.spec),
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/**
 * Converts an object of type 'PodAutoscalerSpec' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_PodAutoscalerSpec(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'containerConcurrency': obj.containerConcurrency,
        'protocolType': obj.protocolType,
        'reachability': obj.reachability,
        'scaleTargetRef': toJson_PodAutoscalerSpecScaleTargetRef(obj.scaleTargetRef),
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/**
 * Converts an object of type 'PodAutoscalerSpecScaleTargetRef' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_PodAutoscalerSpecScaleTargetRef(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'apiVersion': obj.apiVersion,
        'kind': obj.kind,
        'name': obj.name,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
